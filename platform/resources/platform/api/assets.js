/**  * (mg)framework Version 5.0  *	Copyright (c) 1999-2011 eikonlexis LLC. All rights reserved.  *  * This program is protected by copyright laws and international treaties.  * Unauthorized reproduction or distribution of this program, or any   * portion thereof, may result in serious civil and criminal penalties.  *  * Module 		Assets Library (JavaScript)  *//** Result Code Constants */var ASSET_ASURL = 0,	ASSET_ASRESOURCE = 1,	ASSET_ASLIST = 2,		/** RT */	ASSET_MAXSIZE = (1024 * 1024) * 5,	// 5MB	ASSET_DEBUG = false;/**   * Assets Interface Class  */var ASSET = {	/** call, executes the call */	call: function(c, d) {		return result = API.call(sprintf("assets/%s", c), d);	},	/** get, returns a specific asset */	get: function(id, astype) {		if(!astype) {astype = ASSET_ASLIST;}		return this.call('user', {user: id, format: astype?astype:ASSET_ASLIST});			},		/** user, returns the asset from a specific user */	user: function(userid, types) {		// types		var types = $.extend({}, {all: true, images: true, videos: true, audio: true, media: true, documents: true}, types);		// execute		return this.call('user', {user: userid, types: types, format: ASSET_ASLIST});	},		/** upload */	upload: function(userid, fileinfo, named) {		return this.call('upload', {user: userid, file: fileinfo, named: named?named:false});	},		/** uploadform */	uploadform: function(userid, payload, named, result) {		var formid = "updform"+mgUniqueId(), 			container = $("<div></div>").hide().appendTo('body'), 			form = $("<form></form>"),			iframe = $("<iframe></iframe>").attr({width:0, height:0, name: formid}).appendTo(container);		if(payload instanceof jQuery) {			// create form			if(payload.parent().attr("tagName")=="FORM") {				form = payload.parent();			} else {				// add payload				payload.appendTo(form);			}			// create fields			var fields = {				user: userid,				named: named?named:false,				form: true			};		} else {			var fields = payload;		}		// add fields		$.each(fields, function(name, value) {			form.append($("<input/>").attr({type:'hidden', name: name, value: value}));		});		// complete form		form.attr({action: "/api/assets/upload/", method:"post", enctype:"multipart/form-data", encoding: "multipart/form-data", target:formid}).appendTo(container);		var submitted = false;		// assing iframe		iframe.load(function(){			if(!submitted) return;			try {				var text = $(this).contents().text();				var c = JSON.parse(text);			} catch(e) {				var c = false;			}			if(typeof(result)=="function") {				result(c);			}		});		// submit form		setTimeout(function() {			submitted = true;			form.submit();		}, 500);			},		/** remove */	remove: function(items) {		return this.call('delete', {items: items});	},		/** getuploadurl, returns a url for upload a user request */	getuploadurl: function(userid) {		return sprintf("%s/assets/set/%s", API_URL, userid);	}};/** (function) mgAssetsByCategory */var mgAssetsByCategory = function(assets) {		var result = {};	$.each(assets, function(index, a) {		var c = a.category?a.category:'unknown';		if(!result[c]) { result[c] = [];}		result[c].push(a);	});	return result;};