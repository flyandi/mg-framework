/**  * (mg)framework Version 5.0  *	Copyright (c) 1999-2011 eikonlexis LLC. All rights reserved.  *  * This program is protected by copyright laws and international treaties.  * Unauthorized reproduction or distribution of this program, or any   * portion thereof, may result in serious civil and criminal penalties.  *  * Module 		Core Library (JavaScript)  */  /** (mgGetMaxZIndex), returns the highest z-index */var mgGetMaxZIndex = function() {	return Math.max.apply(null,$.map($('body > *'), function(e,n) {		if($(e).css('position')=='static')			return parseInt($(e).css('z-index'))||1 ;		})    );};/** (mgClear), creates a clear div tag */var mgClear = function() { return '<div class="-clear"></div>';};/** (mgErrorMessage) simple error message */var mgErrorMessage = function(m) {	alert(m);};/** (mgGetSnippet) loads a script of a page as snippet */var mgGetSnippet = function(name, remove) {	var snippet = $("."+name), result = snippet.clone();	if(remove){snippet.remove()}	return result;};/** (mgUniqueId) returns a unique id */var mgUniqueId = function() {	return 'xxxxxxxxxxxx4xxxyxxxxxxxxxxxxxxx'.replace(/[xy]/g, function(c){var r = Math.random()*16|0, v = c == 'x' ? r : (r&0x3|0x8); return v.toString(16);}).toUpperCase();};/** (mgCompareJSON) compares the json */var mgCompareJSON = function(a, b) {	var result = true;	$.each(a, function(name, value) {		if(typeof(b[name])=="undefined" || b[name] != value) {			result = false;			return false;		}	});	return result;};/** (mgRequireElementID) checks if the target has the id attribute */var mgRequireElementID = function(target) {	if(typeof(target.attr("id"))=="undefined"||target.attr("id")==""){		target.attr("id", mgUniqueId());	} 	return target.attr("id");};/* Debugger */var jd = function(v) {alert(JSON.stringify(v));};