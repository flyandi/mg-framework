/**  * (mg)framework Version 5.0  *	Copyright (c) 1999-2011 eikonlexis LLC. All rights reserved.  *  * This program is protected by copyright laws and international treaties.  * Unauthorized reproduction or distribution of this program, or any   * portion thereof, may result in serious civil and criminal penalties.  *  * Module 		Button Class  */  /**  * (mgBuildGridFilter)  */var mgBuildGridFilter = function(settings) {	// create settings	var settings = $.extend({}, {novalue: ['false', 'none'], group: false, container: "filter"}, settings);	// get target	var target = settings.group?$(settings.group):$("body").find("["+settings.container+"]");	// initialize	var result = {};	// find all within the group	target.each(function() {		var v = $(this).val();		if(settings.novalue.indexOf(v.toLowerCase())==-1) {			result[$(this).attr(settings.container)] = $(this).val();		}	});	// return	return result;};/** (mgGridDestroyInlineControls) */var mgGridDestroyInlineControls = function() {	$(".-grid-inlinecontrol").remove();};/** (mgGridCreateInlineCombo) */var mgGridCreateInlineControl = function(type, cell, value, settings) {	var settings = $.extend({}, {source: false, destroyonchange: true, onchange: false}, settings);	switch(type) {		case "input": var control = $("<input>/"); break;		default: var control = $("<select></select>").mgFormSelectContent({source: settings.source}); break;	}	// format	control.addClass("-grid-inlinecontrol").css({"z-index":4000,position:'absolute',top:cell.offset().top,left:cell.offset().left+1, width:cell.width()-2, height:cell.height()}).appendTo('body');	// set 	control.val(value);	// set change	control.bind({		change: function() {			if(typeof(settings.onchange)=="function") {				settings.onchange($(this).val());			}			$(this).blur();		},		blur: function() {			if(settings.destroyonchange) $(this).remove();		}	}).focus();	};